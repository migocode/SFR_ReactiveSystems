version: '3.4'

services:
  postgres:
    image: postgres:12
    container_name: postgres
    restart: always
    volumes:
    - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: michi@goll.at
      PGADMIN_DEFAULT_PASSWORD: pgadmin
    ports:
    - "9080:80"

  graphql-engine:
    image: hasura/graphql-engine:v2.3.1
    container_name: graphql-server
    ports:
    - "8080:8080"
    depends_on:
    - "postgres"
    restart: always
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to set an admin secret
      # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey

  sfr_reactivesystems.frontend.server:
    image: ${DOCKER_REGISTRY-}sfrreactivesystemsfrontendserver
    container_name: frontend-web-server
    build:
      context: .
      dockerfile: SFR_ReactiveSystems.Frontend/Server/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    ports:
      - "7080:80"

  sfr_reactivesystems.transactionservice:
    image: ${DOCKER_REGISTRY-}sfrreactivesystemstransactionservice
    container_name: transaction-service
    build:
      context: .
      dockerfile: SFR_ReactiveSystems.TransactionService/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development

volumes:
  db_data: